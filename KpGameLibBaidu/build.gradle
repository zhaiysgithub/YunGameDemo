apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 2
        versionName "1.0.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
//    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    implementation project(path: ':kpinter')

    implementation 'kptech.game.kit:kpinter:1.0.3'
    implementation files('libs/Game-V1.6.0.0_0604.jar')
}


task makeJar(type: Copy) {
    //删除存在的
//    delete "../KpLib/libs/KpGameLib-BD-v${android.defaultConfig.versionName}.jar"
    //设置拷贝的文件
    from('build/intermediates/aar_main_jar/release/')
    //打进jar包后的文件目录
//    into('build/libs/')
    into('../kplib/libs/')
    //将classes.jar放入build/libs/目录下
    //include ,exclude参数来设置过滤
    //（我们只关心classes.jar这个文件）
    include('classes.jar')
    //重命名
    rename ('classes.jar',"KpGameLib-BD-v${android.defaultConfig.versionName}.jar")
}


makeJar.dependsOn(build)


// 1.maven-插件
apply plugin: 'maven'
apply plugin: 'maven-publish'

// 2.maven-信息
ext {// ext is a gradle closure allowing the declaration of global properties
    PUBLISH_GROUP_ID = 'kptech.game.kit'
    PUBLISH_ARTIFACT_ID = 'libbd'
    PUBLISH_PACKAGING = 'aar'
    PUBLISH_VERSION = android.defaultConfig.versionName
}


// 3.maven-路径
uploadArchives {
    repositories.mavenDeployer {
        //Maven仓库本地路径（可以自己新建文件夹，复制链接过来）
        //注意”file://“ + 路径，有三个斜杠，别漏了
        repository(url: "file:///C:/maven")
        //远程仓库的地址
        /*repository(url: "https://maven.kuaipantech.com/repository/maven-releases/") {
            //nexus登录的用户名和密码
            authentication(userName: "admin", password: "kpmvn!#%246")
        }*/
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
            packaging project.PUBLISH_PACKAGING
        }
    }
}